import 'package:flutter/material.dart';
import 'dart:async';
import 'package:tyd_chronos_wallet/presentation/screens/dashboard_screen.dart';

void main() {
  runApp(const TydChronosWalletApp());
}

class TydChronosWalletApp extends StatelessWidget {
  const TydChronosWalletApp({super.key});

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'TyDChronos Vault',
      theme: _buildBlackGoldTheme(),
      home: const SplashScreen(),
      debugShowCheckedModeBanner: false,
    );
  }

ThemeData _buildBlackGoldTheme() {
  return ThemeData(
    primaryColor: const Color(0xFFD4AF37),
    colorScheme: const ColorScheme.dark(
      primary: Color(0xFFD4AF37),
      secondary: Color(0xFFFFD700),
      surface: Colors.black,
      background: Colors.black,
      onSurface: Colors.white,
    ),
    scaffoldBackgroundColor: Colors.black,
    appBarTheme: const AppBarTheme(
      backgroundColor: Colors.black,
      foregroundColor: Color(0xFFD4AF37),
      elevation: 0,
      centerTitle: false,
      iconTheme: IconThemeData(color: Color(0xFFD4AF37)),
    ),
    bottomNavigationBarTheme: const BottomNavigationBarThemeData(
      backgroundColor: Colors.black,
      selectedItemColor: Color(0xFFD4AF37),
      unselectedItemColor: Colors.grey,
    ),
    cardTheme: const CardTheme(
      elevation: 2,
      margin: EdgeInsets.zero,
    ),
    useMaterial3: false,
  );
}
}

// ==================== SPLASH SCREEN ====================

class SplashScreen extends StatefulWidget {
  const SplashScreen({super.key});

  @override
  State<SplashScreen> createState() => _SplashScreenState();
}

class _SplashScreenState extends State<SplashScreen> {
  @override
  void initState() {
    super.initState();
    Timer(const Duration(seconds: 10), () {
      Navigator.pushReplacement(
        context,
        MaterialPageRoute(builder: (context) => const TydChronosHomePage()),
      );
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.black,
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            _buildLogo(150),
            const SizedBox(height: 30),
            const CircularProgressIndicator(
              valueColor: AlwaysStoppedAnimation<Color>(Color(0xFFD4AF37)),
              strokeWidth: 3,
            ),
            const SizedBox(height: 20),
            const Text(
              'TyDChronos Vault',
              style: TextStyle(
                color: Color(0xFFD4AF37),
                fontSize: 24,
                fontWeight: FontWeight.bold,
              ),
            ),
            const SizedBox(height: 8),
            const Text(
              'Advanced Banking & Cryptocurrency Platform',
              style: TextStyle(
                color: Colors.grey,
                fontSize: 14,
              ),
              textAlign: TextAlign.center,
            ),
            const SizedBox(height: 16),
            const Text(
              'Loading secure wallet services...',
              style: TextStyle(
                color: Colors.grey,
                fontSize: 12,
              ),
            ),
          ],
        ),
      ),
    );
  }

  Widget _buildLogo(double size) {
    return Container(
      width: size,
      height: size,
      decoration: BoxDecoration(
        borderRadius: BorderRadius.circular(size / 2),
        boxShadow: [
          BoxShadow(
            color: const Color(0xFFD4AF37).withOpacity(0.3),
            blurRadius: 20,
            spreadRadius: 5,
          ),
        ],
      ),
      child: Image.asset(
        'assets/images/logo.png',
        width: size,
        height: size,
        fit: BoxFit.contain,
        errorBuilder: (context, error, stackTrace) {
          return _buildPlaceholderLogo(size);
        },
      ),
    );
  }

  Widget _buildPlaceholderLogo(double size) {
    return Container(
      width: size,
      height: size,
      decoration: const BoxDecoration(
        color: Color(0xFFD4AF37),
        shape: BoxShape.circle,
      ),
      child: Center(
        child: Icon(
          Icons.account_balance_wallet,
          size: size * 0.6,
          color: Colors.black,
        ),
      ),
    );
  }
}

// ==================== BANKING MODELS ====================

class FiatWallet {
  double balance = 12500.0;
  List<BankAccount> accounts = [
    BankAccount(
      name: 'Primary Checking', 
      number: '**** 7890', 
      balance: 7500.0, 
      type: 'Checking'
    ),
    BankAccount(
      name: 'Savings Account', 
      number: '**** 4567', 
      balance: 5000.0, 
      type: 'Savings'
    ),
  ];
  List<BankCard> cards = [
    BankCard(
      name: 'TyDChronos Platinum', 
      number: '**** 1234', 
      expiry: '12/25', 
      balance: 12500.0
    ),
  ];
  List<Bill> bills = [
    Bill(
      name: 'Electricity', 
      amount: 125.50, 
      dueDate: '2024-01-15', 
      status: 'Pending'
    ),
    Bill(
      name: 'Internet', 
      amount: 89.99, 
      dueDate: '2024-01-20', 
      status: 'Pending'
    ),
  ];
}

class BankAccount {
  final String name;
  final String number;
  final double balance;
  final String type;
  
  BankAccount({
    required this.name,
    required this.number,
    required this.balance,
    required this.type,
  });
}

class BankCard {
  final String name;
  final String number;
  final String expiry;
  final double balance;
  
  BankCard({
    required this.name,
    required this.number,
    required this.expiry,
    required this.balance,
  });
}

class Bill {
  final String name;
  final double amount;
  final String dueDate;
  final String status;
  
  Bill({
    required this.name,
    required this.amount,
    required this.dueDate,
    required this.status,
  });
}

// ==================== CRYPTO MODELS ====================

class CryptoWallet {
  String address = "0x742d35Cc6634C0532925a3b8D";
  List<CryptoAsset> assets = [
    CryptoAsset(
      symbol: 'ETH', 
      name: 'Ethereum', 
      balance: 2.5, 
      usdValue: 7500.0
    ),
    CryptoAsset(
      symbol: 'BTC', 
      name: 'Bitcoin', 
      balance: 0.15, 
      usdValue: 6487.0
    ),
    CryptoAsset(
      symbol: 'ARB', 
      name: 'Arbitrum', 
      balance: 150.0, 
      usdValue: 250.0
    ),
    CryptoAsset(
      symbol: 'MATIC', 
      name: 'Polygon', 
      balance: 500.0, 
      usdValue: 350.0
    ),
  ];
  
  double get totalValueUSD {
    return assets.fold(0.0, (sum, asset) => sum + asset.usdValue);
  }
}

class CryptoAsset {
  final String symbol;
  final String name;
  final double balance;
  final double usdValue;
  
  CryptoAsset({
    required this.symbol,
    required this.name,
    required this.balance,
    required this.usdValue,
  });
}

class TradingBot {
  double tradingBalance = 1.2;
  bool isActive = true;
  double totalProfit = 1250.50;
  double successRate = 72.5;
}

// ==================== MAIN APP WITH LOGO ====================

class TydChronosHomePage extends StatefulWidget {
  const TydChronosHomePage({super.key});

  @override
  State<TydChronosHomePage> createState() => _TydChronosHomePageState();
}

class _TydChronosHomePageState extends State<TydChronosHomePage> {
  int _selectedIndex = 0;
  final CryptoWallet _cryptoWallet = CryptoWallet();
  final FiatWallet _fiatWallet = FiatWallet();
  final TradingBot _tradingBot = TradingBot();

  // Custom app bar with logo for all pages
  AppBar _buildAppBar(String title) {
    return AppBar(
      backgroundColor: Colors.black,
      elevation: 0,
      leading: Padding(
        padding: const EdgeInsets.all(8.0),
        child: _buildLogo(35),
      ),
      title: Text(
        title,
        style: const TextStyle(
          color: Color(0xFFD4AF37),
          fontWeight: FontWeight.bold,
          fontSize: 20,
        ),
      ),
      actions: [
        IconButton(
          icon: const Icon(Icons.notifications_none),
          onPressed: () {},
          color: const Color(0xFFD4AF37),
        ),
        IconButton(
          icon: const Icon(Icons.security),
          onPressed: () {},
          color: const Color(0xFFD4AF37),
        ),
      ],
    );
  }

  Widget _buildLogo(double size) {
    return Image.asset(
      'assets/images/logo.png',
      width: size,
      height: size,
      fit: BoxFit.contain,
      errorBuilder: (context, error, stackTrace) {
        return Container(
          width: size,
          height: size,
          decoration: const BoxDecoration(
            color: Color(0xFFD4AF37),
            shape: BoxShape.circle,
          ),
          child: Center(
            child: Icon(
              Icons.account_balance_wallet,
              size: size * 0.6,
              color: Colors.black,
            ),
          ),
        );
      },
    );
  }

  void _onItemTapped(int index) {
    setState(() {
      _selectedIndex = index;
    });
  }

  Widget _getCurrentScreen() {
    switch (_selectedIndex) {
      case 0:
        return DashboardScreen(
          cryptoWallet: _cryptoWallet,
          fiatWallet: _fiatWallet,
          tradingBot: _tradingBot,
        );
      case 1:
        return CryptoScreen(cryptoWallet: _cryptoWallet);
      case 2:
        return BankingScreen(fiatWallet: _fiatWallet);
      case 3:
        return TradingScreen(tradingBot: _tradingBot);
      default:
        return DashboardScreen(
          cryptoWallet: _cryptoWallet,
          fiatWallet: _fiatWallet,
          tradingBot: _tradingBot,
        );
    }
  }

  @override
  Widget build(BuildContext context) {
    final List<String> appBarTitles = [
      'Portfolio Overview',
      'Cryptocurrency',
      'Traditional Banking',
      'AI Trading'
    ];

    return Scaffold(
      backgroundColor: Colors.black,
      appBar: _buildAppBar(appBarTitles[_selectedIndex]),
      body: _getCurrentScreen(),
      bottomNavigationBar: BottomNavigationBar(
        backgroundColor: Colors.black,
        selectedItemColor: const Color(0xFFD4AF37),
        unselectedItemColor: Colors.grey[600],
        currentIndex: _selectedIndex,
        onTap: _onItemTapped,
        type: BottomNavigationBarType.fixed,
        items: const [
          BottomNavigationBarItem(
            icon: Icon(Icons.dashboard),
            label: 'Overview',
          ),
          BottomNavigationBarItem(
            icon: Icon(Icons.currency_bitcoin),
            label: 'Crypto',
          ),
          BottomNavigationBarItem(
            icon: Icon(Icons.account_balance),
            label: 'Banking',
          ),
          BottomNavigationBarItem(
            icon: Icon(Icons.auto_graph),
            label: 'Trading',
          ),
        ],
      ),
    );
  }
}

// ==================== CRYPTO SCREEN ====================

class CryptoScreen extends StatelessWidget {
  final CryptoWallet cryptoWallet;

  const CryptoScreen({super.key, required this.cryptoWallet});

  @override
  Widget build(BuildContext context) {
    return Column(
      children: [
        // Total Crypto Value
        Container(
          margin: const EdgeInsets.all(16),
          padding: const EdgeInsets.all(20),
          decoration: BoxDecoration(
            color: Colors.grey[900],
            borderRadius: BorderRadius.circular(16),
          ),
          child: Column(
            children: [
              const Text(
                'Total Crypto Value',
                style: TextStyle(color: Colors.grey, fontSize: 16),
              ),
              const SizedBox(height: 8),
              Text(
                '\$${cryptoWallet.totalValueUSD.toStringAsFixed(2)}',
                style: const TextStyle(
                  fontSize: 32,
                  fontWeight: FontWeight.bold,
                  color: Color(0xFFD4AF37),
                ),
              ),
            ],
          ),
        ),
        
        // Assets List
        Expanded(
          child: ListView.builder(
            itemCount: cryptoWallet.assets.length,
            itemBuilder: (context, index) {
              final asset = cryptoWallet.assets[index];
              return Container(
                margin: const EdgeInsets.symmetric(horizontal: 16, vertical: 4),
                decoration: BoxDecoration(
                  color: Colors.grey[900],
                  borderRadius: BorderRadius.circular(12),
                ),
                child: ListTile(
                  leading: Container(
                    width: 40,
                    height: 40,
                    decoration: BoxDecoration(
                      color: const Color(0xFFD4AF37).withOpacity(0.2),
                      borderRadius: BorderRadius.circular(8),
                    ),
                    child: Icon(
                      Icons.currency_bitcoin,
                      color: const Color(0xFFD4AF37),
                      size: 24,
                    ),
                  ),
                  title: Text(
                    asset.symbol,
                    style: const TextStyle(
                      color: Colors.white,
                      fontWeight: FontWeight.bold,
                    ),
                  ),
                  subtitle: Text(
                    asset.name,
                    style: const TextStyle(color: Colors.grey),
                  ),
                  trailing: Column(
                    mainAxisAlignment: MainAxisAlignment.center,
                    crossAxisAlignment: CrossAxisAlignment.end,
                    children: [
                      Text(
                        '\$${asset.usdValue.toStringAsFixed(2)}',
                        style: const TextStyle(
                          color: Colors.white,
                          fontWeight: FontWeight.bold,
                        ),
                      ),
                      Text(
                        '${asset.balance.toStringAsFixed(4)}',
                        style: const TextStyle(color: Colors.grey, fontSize: 12),
                      ),
                    ],
                  ),
                ),
              );
            },
          ),
        ),
      ],
    );
  }
}

// ==================== BANKING SCREEN ====================

class BankingScreen extends StatelessWidget {
  final FiatWallet fiatWallet;

  const BankingScreen({super.key, required this.fiatWallet});

  @override
  Widget build(BuildContext context) {
    return DefaultTabController(
      length: 3,
      child: Scaffold(
        backgroundColor: Colors.black,
        appBar: AppBar(
          backgroundColor: Colors.black,
          foregroundColor: const Color(0xFFD4AF37),
          elevation: 0,
          bottom: TabBar(
            indicatorColor: const Color(0xFFD4AF37),
            labelColor: const Color(0xFFD4AF37),
            unselectedLabelColor: Colors.grey[600],
            tabs: const [
              Tab(text: 'Accounts'),
              Tab(text: 'Cards'),
              Tab(text: 'Bills'),
            ],
          ),
        ),
        body: TabBarView(
          children: [
            // Accounts Tab
            _buildAccountsTab(),
            // Cards Tab
            _buildCardsTab(),
            // Bills Tab
            _buildBillsTab(),
          ],
        ),
      ),
    );
  }

  Widget _buildAccountsTab() {
    return ListView(
      children: [
        // Total Balance Card
        Container(
          margin: const EdgeInsets.all(16),
          decoration: BoxDecoration(
            color: Colors.grey[900],
            borderRadius: BorderRadius.circular(16),
          ),
          child: Padding(
            padding: const EdgeInsets.all(20),
            child: Column(
              children: [
                const Text(
                  'Total Banking Balance',
                  style: TextStyle(color: Colors.grey, fontSize: 16),
                ),
                const SizedBox(height: 8),
                Text(
                  '\$${fiatWallet.balance.toStringAsFixed(2)}',
                  style: const TextStyle(
                    fontSize: 32,
                    fontWeight: FontWeight.bold,
                    color: Color(0xFFD4AF37),
                  ),
                ),
                const SizedBox(height: 20),
                Row(
                  children: [
                    Expanded(
                      child: ElevatedButton(
                        onPressed: () {},
                        style: ElevatedButton.styleFrom(
                          backgroundColor: const Color(0xFFD4AF37),
                          foregroundColor: Colors.black,
                          padding: const EdgeInsets.symmetric(vertical: 12),
                        ),
                        child: const Text('DEPOSIT'),
                      ),
                    ),
                    const SizedBox(width: 12),
                    Expanded(
                      child: OutlinedButton(
                        onPressed: () {},
                        style: OutlinedButton.styleFrom(
                          foregroundColor: const Color(0xFFD4AF37),
                          side: const BorderSide(color: Color(0xFFD4AF37)),
                          padding: const EdgeInsets.symmetric(vertical: 12),
                        ),
                        child: const Text('WITHDRAW'),
                      ),
                    ),
                  ],
                ),
              ],
            ),
          ),
        ),
        
        // Accounts List
        ...fiatWallet.accounts.map((account) => Container(
          margin: const EdgeInsets.symmetric(horizontal: 16, vertical: 4),
          decoration: BoxDecoration(
            color: Colors.grey[900],
            borderRadius: BorderRadius.circular(12),
          ),
          child: ListTile(
            leading: const Icon(
              Icons.account_balance,
              color: Color(0xFFD4AF37),
              size: 30,
            ),
            title: Text(
              account.name,
              style: const TextStyle(color: Colors.white),
            ),
            subtitle: Text(
              account.number,
              style: const TextStyle(color: Colors.grey),
            ),
            trailing: Column(
              mainAxisAlignment: MainAxisAlignment.center,
              crossAxisAlignment: CrossAxisAlignment.end,
              children: [
                Text(
                  '\$${account.balance.toStringAsFixed(2)}',
                  style: const TextStyle(
                    color: Colors.white,
                    fontWeight: FontWeight.bold,
                  ),
                ),
                Text(
                  account.type,
                  style: const TextStyle(color: Colors.grey, fontSize: 12),
                ),
              ],
            ),
          ),
        )).toList(),
      ],
    );
  }

  Widget _buildCardsTab() {
    return ListView.builder(
      itemCount: fiatWallet.cards.length,
      itemBuilder: (context, index) {
        final card = fiatWallet.cards[index];
        return Container(
          margin: const EdgeInsets.all(16),
          decoration: BoxDecoration(
            gradient: const LinearGradient(
              begin: Alignment.topLeft,
              end: Alignment.bottomRight,
              colors: [Color(0xFFD4AF37), Color(0xFFFFD700)],
            ),
            borderRadius: BorderRadius.circular(16),
            boxShadow: [
              BoxShadow(
                color: const Color(0xFFD4AF37).withOpacity(0.3),
                blurRadius: 10,
                spreadRadius: 2,
              ),
            ],
          ),
          child: Padding(
            padding: const EdgeInsets.all(20),
            child: Column(
              crossAxisAlignment: CrossAxisAlignment.start,
              children: [
                Row(
                  children: [
                    const Icon(Icons.credit_card, color: Colors.black),
                    const SizedBox(width: 8),
                    Text(
                      card.name,
                      style: const TextStyle(
                        color: Colors.black,
                        fontWeight: FontWeight.bold,
                        fontSize: 18,
                      ),
                    ),
                  ],
                ),
                const SizedBox(height: 20),
                Text(
                  card.number,
                  style: const TextStyle(
                    color: Colors.black,
                    fontSize: 20,
                    letterSpacing: 2,
                  ),
                ),
                const SizedBox(height: 15),
                Row(
                  mainAxisAlignment: MainAxisAlignment.spaceBetween,
                  children: [
                    Column(
                      crossAxisAlignment: CrossAxisAlignment.start,
                      children: [
                        const Text(
                          'EXPIRES',
                          style: TextStyle(
                            color: Colors.black54,
                            fontSize: 12,
                          ),
                        ),
                        Text(
                          card.expiry,
                          style: const TextStyle(
                            color: Colors.black,
                            fontWeight: FontWeight.bold,
                          ),
                        ),
                      ],
                    ),
                    Column(
                      crossAxisAlignment: CrossAxisAlignment.start,
                      children: [
                        const Text(
                          'BALANCE',
                          style: TextStyle(
                            color: Colors.black54,
                            fontSize: 12,
                          ),
                        ),
                        Text(
                          '\$${card.balance.toStringAsFixed(2)}',
                          style: const TextStyle(
                            color: Colors.black,
                            fontWeight: FontWeight.bold,
                          ),
                        ),
                      ],
                    ),
                  ],
                ),
              ],
            ),
          ),
        );
      },
    );
  }

  Widget _buildBillsTab() {
    return ListView.builder(
      itemCount: fiatWallet.bills.length,
      itemBuilder: (context, index) {
        final bill = fiatWallet.bills[index];
        return Container(
          margin: const EdgeInsets.symmetric(horizontal: 16, vertical: 4),
          decoration: BoxDecoration(
            color: Colors.grey[900],
            borderRadius: BorderRadius.circular(12),
          ),
          child: ListTile(
            leading: const Icon(
              Icons.receipt_long,
              color: Color(0xFFD4AF37),
              size: 30,
            ),
            title: Text(
              bill.name,
              style: const TextStyle(color: Colors.white),
            ),
            subtitle: Text(
              'Due: ${bill.dueDate}',
              style: const TextStyle(color: Colors.grey),
            ),
            trailing: Column(
              mainAxisAlignment: MainAxisAlignment.center,
              crossAxisAlignment: CrossAxisAlignment.end,
              children: [
                Text(
                  '\$${bill.amount.toStringAsFixed(2)}',
                  style: const TextStyle(
                    color: Colors.white,
                    fontWeight: FontWeight.bold,
                  ),
                ),
                const SizedBox(height: 4),
                Container(
                  padding: const EdgeInsets.symmetric(horizontal: 8, vertical: 2),
                  decoration: BoxDecoration(
                    color: bill.status == 'Paid' ? Colors.green : Colors.orange,
                    borderRadius: BorderRadius.circular(8),
                  ),
                  child: Text(
                    bill.status.toUpperCase(),
                    style: const TextStyle(
                      color: Colors.white,
                      fontSize: 10,
                      fontWeight: FontWeight.bold,
                    ),
                  ),
                ),
              ],
            ),
          ),
        );
      },
    );
  }
}

// ==================== TRADING SCREEN ====================

class TradingScreen extends StatelessWidget {
  final TradingBot tradingBot;

  const TradingScreen({super.key, required this.tradingBot});

  @override
  Widget build(BuildContext context) {
    return Padding(
      padding: const EdgeInsets.all(16),
      child: Column(
        children: [
          // Trading Bot Status
          Container(
            decoration: BoxDecoration(
              color: Colors.grey[900],
              borderRadius: BorderRadius.circular(16),
            ),
            padding: const EdgeInsets.all(20),
            child: Column(
              children: [
                Row(
                  children: [
                    const Icon(Icons.smart_toy, color: Color(0xFFD4AF37), size: 30),
                    const SizedBox(width: 12),
                    const Text(
                      'AI Trading Bot',
                      style: TextStyle(
                        fontSize: 20,
                        fontWeight: FontWeight.bold,
                        color: Colors.white,
                      ),
                    ),
                    const Spacer(),
                    Container(
                      padding: const EdgeInsets.symmetric(horizontal: 12, vertical: 6),
                      decoration: BoxDecoration(
                        color: tradingBot.isActive ? Colors.green : Colors.red,
                        borderRadius: BorderRadius.circular(12),
                      ),
                      child: Text(
                        tradingBot.isActive ? 'ACTIVE' : 'INACTIVE',
                        style: const TextStyle(
                          color: Colors.white,
                          fontSize: 12,
                          fontWeight: FontWeight.bold,
                        ),
                      ),
                    ),
                  ],
                ),
                const SizedBox(height: 20),
                Row(
                  mainAxisAlignment: MainAxisAlignment.spaceAround,
                  children: [
                    Column(
                      children: [
                        const Text('Trading Balance', style: TextStyle(color: Colors.grey)),
                        Text(
                          '${tradingBot.tradingBalance} ETH',
                          style: const TextStyle(color: Colors.white, fontWeight: FontWeight.bold),
                        ),
                      ],
                    ),
                    Column(
                      children: [
                        const Text('Total Profit', style: TextStyle(color: Colors.grey)),
                        Text(
                          '\$${tradingBot.totalProfit.toStringAsFixed(2)}',
                          style: const TextStyle(color: Colors.green, fontWeight: FontWeight.bold),
                        ),
                      ],
                    ),
                    Column(
                      children: [
                        const Text('Success Rate', style: TextStyle(color: Colors.grey)),
                        Text(
                          '${tradingBot.successRate}%',
                          style: const TextStyle(color: Colors.white, fontWeight: FontWeight.bold),
                        ),
                      ],
                    ),
                  ],
                ),
                const SizedBox(height: 20),
                ElevatedButton(
                  onPressed: () {},
                  style: ElevatedButton.styleFrom(
                    backgroundColor: const Color(0xFFD4AF37),
                    foregroundColor: Colors.black,
                    minimumSize: const Size(double.infinity, 50),
                    shape: RoundedRectangleBorder(
                      borderRadius: BorderRadius.circular(12),
                    ),
                  ),
                  child: const Text(
                    'EXECUTE TRADE STRATEGY',
                    style: TextStyle(fontWeight: FontWeight.bold),
                  ),
                ),
              ],
            ),
          ),
          
          const SizedBox(height: 20),
          
          // Trading Statistics
          Container(
            decoration: BoxDecoration(
              color: Colors.grey[900],
              borderRadius: BorderRadius.circular(16),
            ),
            padding: const EdgeInsets.all(20),
            child: const Column(
              crossAxisAlignment: CrossAxisAlignment.start,
              children: [
                Text(
                  'Trading Statistics',
                  style: TextStyle(
                    color: Colors.white,
                    fontSize: 18,
                    fontWeight: FontWeight.bold,
                  ),
                ),
                SizedBox(height: 16),
                Row(
                  mainAxisAlignment: MainAxisAlignment.spaceBetween,
                  children: [
                    Text('24h Trades:', style: TextStyle(color: Colors.grey)),
                    Text('15', style: TextStyle(color: Colors.white)),
                  ],
                ),
                SizedBox(height: 8),
                Row(
                  mainAxisAlignment: MainAxisAlignment.spaceBetween,
                  children: [
                    Text('Active Strategies:', style: TextStyle(color: Colors.grey)),
                    Text('3', style: TextStyle(color: Colors.white)),
                  ],
                ),
                SizedBox(height: 8),
                Row(
                  mainAxisAlignment: MainAxisAlignment.spaceBetween,
                  children: [
                    Text('Risk Level:', style: TextStyle(color: Colors.grey)),
                    Text('Medium', style: TextStyle(color: Colors.orange)),
                  ],
                ),
              ],
            ),
          ),
        ],
      ),
    );
  }
}